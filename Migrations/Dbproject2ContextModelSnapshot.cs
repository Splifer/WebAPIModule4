// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPIModule4.Models;

#nullable disable

namespace WebAPIModule4.Migrations
{
    [DbContext(typeof(Dbproject2Context))]
    partial class Dbproject2ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPIModule4.Models.Account", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birth_date");

                    b.Property<string>("Filter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenderName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("gender_name");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LoginId")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("login_id");

                    b.Property<string>("MailAddress")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("mail_address");

                    b.Property<string>("Password")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("password");

                    b.Property<string>("RoleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("role_name");

                    b.Property<int?>("TelNo")
                        .HasColumnType("int")
                        .HasColumnName("tel_no");

                    b.Property<string>("UserName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("user_name");

                    b.HasKey("UserId")
                        .HasName("PK__Account__B9BE370F1FEE6395");

                    b.HasIndex("GenderName");

                    b.HasIndex("RoleName");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("WebAPIModule4.Models.Brand", b =>
                {
                    b.Property<string>("BrandName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("brand_name");

                    b.Property<string>("BrandId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("brand_id");

                    b.Property<string>("Filter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("BrandName");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("WebAPIModule4.Models.Gender", b =>
                {
                    b.Property<string>("GenderName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("gender_name");

                    b.Property<string>("Filter")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("GenderId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("gender_id");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("GenderName");

                    b.ToTable("Gender");
                });

            modelBuilder.Entity("WebAPIModule4.Models.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("order_id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Filter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("OrderPrice")
                        .HasColumnType("decimal(18, 3)")
                        .HasColumnName("order_price");

                    b.Property<string>("PaymentId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("payment_id");

                    b.Property<int?>("ProductCount")
                        .HasColumnType("int")
                        .HasColumnName("product_count");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("product_id");

                    b.Property<string>("ShippingId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("shipping_id");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("OrderId")
                        .HasName("PK__Order__4659622934014D54");

                    b.HasIndex("PaymentId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShippingId");

                    b.HasIndex("UserId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("WebAPIModule4.Models.Payment", b =>
                {
                    b.Property<string>("PaymentId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("payment_id");

                    b.Property<string>("Filter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PaymentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("payment_name");

                    b.HasKey("PaymentId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("WebAPIModule4.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("product_id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("BrandName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("brand_name");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("date")
                        .HasColumnName("expiry_date");

                    b.Property<string>("Filter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("icon");

                    b.Property<string>("Icon1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("icon1");

                    b.Property<string>("Icon2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("icon2");

                    b.Property<string>("Icon3")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("icon3");

                    b.Property<string>("Icon4")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("icon4");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ManufacturingDate")
                        .HasColumnType("date")
                        .HasColumnName("manufacturing_date");

                    b.Property<string>("PaymentId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("payment_id");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 3)")
                        .HasColumnName("price");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("product_name");

                    b.Property<string>("ShippingId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("shipping_id");

                    b.Property<int?>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("stock");

                    b.HasKey("ProductId")
                        .HasName("PK__Product__47027DF5F3C6A64F");

                    b.HasIndex("BrandName");

                    b.HasIndex("PaymentId");

                    b.HasIndex("ShippingId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("WebAPIModule4.Models.Role", b =>
                {
                    b.Property<string>("RoleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("role_name");

                    b.Property<string>("Filter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("role_id");

                    b.HasKey("RoleName");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("WebAPIModule4.Models.Shipping", b =>
                {
                    b.Property<string>("ShippingId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("shipping_id");

                    b.Property<string>("Filter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ShippingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("shipping_name");

                    b.HasKey("ShippingId");

                    b.ToTable("Shipping");
                });

            modelBuilder.Entity("WebAPIModule4.Models.Account", b =>
                {
                    b.HasOne("WebAPIModule4.Models.Gender", "GenderNameNavigation")
                        .WithMany("Accounts")
                        .HasForeignKey("GenderName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Account_Gender");

                    b.HasOne("WebAPIModule4.Models.Role", "RoleNameNavigation")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Account_Role");

                    b.Navigation("GenderNameNavigation");

                    b.Navigation("RoleNameNavigation");
                });

            modelBuilder.Entity("WebAPIModule4.Models.Order", b =>
                {
                    b.HasOne("WebAPIModule4.Models.Payment", "Payment")
                        .WithMany("Orders")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Order_Payment");

                    b.HasOne("WebAPIModule4.Models.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Order__product_i__1CF15040");

                    b.HasOne("WebAPIModule4.Models.Shipping", "Shipping")
                        .WithMany("Orders")
                        .HasForeignKey("ShippingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Order_Shipping");

                    b.HasOne("WebAPIModule4.Models.Account", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Order__user_id__1BFD2C07");

                    b.Navigation("Payment");

                    b.Navigation("Product");

                    b.Navigation("Shipping");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPIModule4.Models.Product", b =>
                {
                    b.HasOne("WebAPIModule4.Models.Brand", "BrandNameNavigation")
                        .WithMany("Products")
                        .HasForeignKey("BrandName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Product_Brand");

                    b.HasOne("WebAPIModule4.Models.Payment", "Payment")
                        .WithMany("Products")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Product_Payment");

                    b.HasOne("WebAPIModule4.Models.Shipping", "Shipping")
                        .WithMany("Products")
                        .HasForeignKey("ShippingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Product_Shipping");

                    b.Navigation("BrandNameNavigation");

                    b.Navigation("Payment");

                    b.Navigation("Shipping");
                });

            modelBuilder.Entity("WebAPIModule4.Models.Account", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("WebAPIModule4.Models.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("WebAPIModule4.Models.Gender", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("WebAPIModule4.Models.Payment", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("WebAPIModule4.Models.Product", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("WebAPIModule4.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("WebAPIModule4.Models.Shipping", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
